# settings.py
import os

# --- Excel Settings ---
EXCEL_FILENAME = "persistent_user_data.xlsx"

BASE_HEADERS = ["Telegram ID", "Unique ID", "Name", "Age"]
CORSI_HEADERS = [
    "Corsi - Max Correct Sequence Length",
    "Corsi - Avg Time Per Element (s)",
    "Corsi - Sequence Times Detail",
    "Corsi - Interrupted",
]
STROOP_HEADERS = [
    "Stroop Part1 Time (s)",
    "Stroop Part1 Errors",
    "Stroop Part2 Time (s)",
    "Stroop Part2 Errors",
    "Stroop Part3 Time (s)",
    "Stroop Part3 Errors",
    "Stroop - Interrupted",
]
REACTION_TIME_HEADERS = [
    "ReactionTime_Time_ms",
    "ReactionTime_Attempts",
    "ReactionTime_Status",
    "ReactionTime_Interrupted",
]
VERBAL_FLUENCY_HEADERS = [
    "VerbalFluency_Category",
    "VerbalFluency_Letter",
    "VerbalFluency_WordCount",
    "VerbalFluency_WordsList",
    "VerbalFluency_Interrupted",
]
MENTAL_ROTATION_HEADERS = [
    "MentalRotation_CorrectAnswers",
    "MentalRotation_AverageReactionTime_s",
    "MentalRotation_TotalTime_s",
    "MentalRotation_IndividualResponses",
    "MentalRotation_Interrupted",
]
RAVEN_MATRICES_HEADERS = [
    "RavenMatrices_CorrectAnswers",
    "RavenMatrices_TotalTime_s",
    "RavenMatrices_AvgTimeCorrect_s",
    "RavenMatrices_IndividualTimes_s",
    "RavenMatrices_Interrupted",
]

ALL_EXPECTED_HEADERS = (
    BASE_HEADERS
    + CORSI_HEADERS
    + STROOP_HEADERS
    + REACTION_TIME_HEADERS
    + VERBAL_FLUENCY_HEADERS
    + MENTAL_ROTATION_HEADERS
    + RAVEN_MATRICES_HEADERS
)

# --- Stroop Test Constants ---
STROOP_COLORS_DEF = {
    "–ö—Ä–∞—Å–Ω—ã–π": {"rgb": (220, 20, 60), "name": "–ö–†–ê–°–ù–´–ô", "emoji": "üü•"},
    "–°–∏–Ω–∏–π": {"rgb": (0, 0, 205), "name": "–°–ò–ù–ò–ô", "emoji": "üü¶"},
    "–ó–µ–ª–µ–Ω—ã–π": {"rgb": (34, 139, 34), "name": "–ó–ï–õ–ï–ù–´–ô", "emoji": "üü©"},
    "–ñ–µ–ª—Ç—ã–π": {"rgb": (255, 215, 0), "name": "–ñ–ï–õ–¢–´–ô", "emoji": "üü®"},
    "–ß–µ—Ä–Ω—ã–π": {"rgb": (0, 0, 0), "name": "–ß–ï–†–ù–´–ô", "emoji": "‚¨õ"},
}
STROOP_COLOR_NAMES = list(STROOP_COLORS_DEF.keys())
STROOP_ITERATIONS_PER_PART = 6
STROOP_FONT_PATH = "arial.ttf"  # Make sure this font is available
STROOP_IMAGE_SIZE = (300, 150)
STROOP_TEXT_COLOR_ON_PATCH = (255, 255, 255)
STROOP_INSTRUCTION_TEXT_PART1 = (
    "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>–¢–µ—Å—Ç –°—Ç—Ä—É–ø–∞!</b>\n\n"
    "–≠—Ç–æ—Ç —Ç–µ—Å—Ç –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç –≤–∞—à—É —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –ø–æ–¥–∞–≤–ª—è—Ç—å –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω—É—é"
    " –∏–Ω—Ç–µ—Ä—Ñ–µ—Ä–µ–Ω—Ü–∏—é. –û–Ω —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —Ç—Ä–µ—Ö —á–∞—Å—Ç–µ–π.\n\n"
    "<b>–ß–∞—Å—Ç—å 1: –°–ª–æ–≤–∞</b>\n"
    "–í–∞–º –±—É–¥—É—Ç –ø–æ–∫–∞–∑–∞–Ω—ã –Ω–∞–∑–≤–∞–Ω–∏—è —Ü–≤–µ—Ç–æ–≤, –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–µ —á–µ—Ä–Ω—ã–º –∂–∏—Ä–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º."
    " –í–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äì –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ –Ω–∞–∂–∞—Ç—å –Ω–∞ <b>—Ü–≤–µ—Ç–Ω–æ–π –∫–≤–∞–¥—Ä–∞—Ç</b>"
    " (–∫–Ω–æ–ø–∫—É-—ç–º–æ–¥–∑–∏), —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π <b>–Ω–∞–ø–∏—Å–∞–Ω–Ω–æ–º—É –Ω–∞–∑–≤–∞–Ω–∏—é"
    " —Ü–≤–µ—Ç–∞</b>.\n\n"
    "–ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å. –ù–∞–∂–º–∏—Ç–µ '–ü–æ–Ω—è—Ç–Ω–æ', —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ß–∞—Å—Ç—å 1."
)
STROOP_INSTRUCTION_TEXT_PART2 = (
    "<b>–ß–∞—Å—Ç—å 2: –¶–≤–µ—Ç–Ω—ã–µ –ü–ª–∞—à–∫–∏</b>\n"
    "–¢–µ–ø–µ—Ä—å –≤–∞–º –±—É–¥—É—Ç –ø–æ–∫–∞–∑–∞–Ω—ã —Ü–≤–µ—Ç–Ω—ã–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∏. –ù–∞ –∫–∞–∂–¥–æ–º"
    " –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–µ –±–µ–ª—ã–º–∏ –±—É–∫–≤–∞–º–∏ –±—É–¥–µ—Ç –Ω–∞–ø–∏—Å–∞–Ω–æ —Å–ª—É—á–∞–π–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ü–≤–µ—Ç–∞"
    " (–æ–Ω–æ –Ω–µ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –∑–∞–¥–∞—á–∏).\n\n"
    "–í–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äì –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É —Å <b>–Ω–∞–∑–≤–∞–Ω–∏–µ–º"
    " —Ü–≤–µ—Ç–∞</b>, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º <b>—Ü–≤–µ—Ç—É —Å–∞–º–æ–≥–æ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞"
    " (—Ñ–æ–Ω–∞)</b>.\n\n"
    "–ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å. –ù–∞–∂–º–∏—Ç–µ '–ü–æ–Ω—è—Ç–Ω–æ', —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ß–∞—Å—Ç—å 2."
)
STROOP_INSTRUCTION_TEXT_PART3 = (
    "<b>–ß–∞—Å—Ç—å 3: –ò–Ω—Ç–µ—Ä—Ñ–µ—Ä–µ–Ω—Ü–∏—è</b>\n"
    "–í —ç—Ç–æ–π —á–∞—Å—Ç–∏ –≤–∞–º —Å–Ω–æ–≤–∞ –±—É–¥—É—Ç –ø–æ–∫–∞–∑–∞–Ω—ã —Å–ª–æ–≤–∞, –æ–±–æ–∑–Ω–∞—á–∞—é—â–∏–µ —Ü–≤–µ—Ç–∞."
    " –û–¥–Ω–∞–∫–æ —Ç–µ–ø–µ—Ä—å —Å–∞–º–∏ —Å–ª–æ–≤–∞ –±—É–¥—É—Ç –Ω–∞–ø–∏—Å–∞–Ω—ã <b>—Ü–≤–µ—Ç–Ω—ã–º–∏ —á–µ—Ä–Ω–∏–ª–∞–º–∏</b>,"
    " –ø—Ä–∏—á–µ–º —Ü–≤–µ—Ç —á–µ—Ä–Ω–∏–ª –ù–ï –±—É–¥–µ—Ç —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º —Å–ª–æ–≤–∞.\n\n"
    "–í–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äì –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É —Å <b>–Ω–∞–∑–≤–∞–Ω–∏–µ–º"
    " —Ü–≤–µ—Ç–∞</b>, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º <b>—Ü–≤–µ—Ç—É —á–µ—Ä–Ω–∏–ª</b>, –∫–æ—Ç–æ—Ä—ã–º –Ω–∞–ø–∏—Å–∞–Ω–æ"
    " —Å–ª–æ–≤–æ (–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–ª–æ–≤–∞).\n\n"
    "–ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å. –ù–∞–∂–º–∏—Ç–µ '–ü–æ–Ω—è—Ç–Ω–æ', —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ß–∞—Å—Ç—å 3."
)


# --- Reaction Time Test Constants ---
# –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –¥–ª—è RT
RT_IMAGES_DIR = os.path.join("images", "rt_images")
# REACTION_TIME_IMAGE_POOL –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω—è—Ç—å—Å—è –≤ main_bot.py
REACTION_TIME_IMAGE_POOL: list[str] = []
REACTION_TIME_MEMORIZATION_S = 10
REACTION_TIME_STIMULUS_INTERVAL_S = 6
REACTION_TIME_MAX_ATTEMPTS = 2
REACTION_TIME_NUM_STIMULI_IN_SEQUENCE = 7
REACTION_TIME_TARGET_REACTION_WINDOW_S = REACTION_TIME_STIMULUS_INTERVAL_S - 1


# --- Verbal Fluency Test Constants ---
VERBAL_FLUENCY_DURATION_S = 60
VERBAL_FLUENCY_CATEGORY = "–û–±—â–∏–µ —Å–ª–æ–≤–∞"
_USABLE_RUSSIAN_LETTERS_VF = "–ê–ë–í–ì–î–ï–ñ–ó–ò–ö–õ–ú–ù–û–ü–†–°–¢–£–§–•–¶–ß–®–≠–Ø"
VERBAL_FLUENCY_TASK_POOL: list[dict] = []
if _USABLE_RUSSIAN_LETTERS_VF:
    for letter_vf in _USABLE_RUSSIAN_LETTERS_VF:
        VERBAL_FLUENCY_TASK_POOL.append(
            {
                "base_category": VERBAL_FLUENCY_CATEGORY,
                "letter": letter_vf.upper(),
            }
        )

# --- Mental Rotation Test Constants ---
MENTAL_ROTATION_NUM_ITERATIONS = 5
MR_BASE_DIR = os.path.join("images", "mental_rotation")
MR_REFERENCES_DIR = os.path.join(MR_BASE_DIR, "references")
MR_CORRECT_PROJECTIONS_DIR = os.path.join(MR_BASE_DIR, "correct_projections")
MR_DISTRACTORS_DIR = os.path.join(MR_BASE_DIR, "distractors")

# –≠—Ç–∏ —Å–ø–∏—Å–∫–∏ –±—É–¥—É—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –≤ main_bot.py –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
MR_REFERENCE_FILES: list[str] = []
MR_CORRECT_PROJECTIONS_MAP: dict[str, list[str]] = {}
MR_ALL_DISTRACTORS_FILES: list[str] = []

MR_COLLAGE_CELL_SIZE = (250, 250)
MR_COLLAGE_BG_COLOR = (255, 255, 255)
MR_FEEDBACK_DISPLAY_TIME_S = 0.75


# --- Raven Matrices Test Constants ---
RAVEN_NUM_TASKS_TO_PRESENT = 20
RAVEN_TOTAL_AVAILABLE_TASKS_IDEAL = 80
RAVEN_BASE_DIR = os.path.join("images", "raven_matrices")
RAVEN_FEEDBACK_DISPLAY_TIME_S = 0.75
# RAVEN_ALL_TASK_FILES –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω –≤ main_bot.py
RAVEN_ALL_TASK_FILES: list[str] = []


